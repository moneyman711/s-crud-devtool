/*
 * JSP generated by Resin-4.0.47 (built Thu, 03 Dec 2015 10:34:34 PST)
 */

package _jsp._user._forms;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import com.beanwiz.*;
import java.io.*;
import java.util.*;
import java.sql.*;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.naming.*;
import javax.sql.*;
import com.webapp.utils.*;

public class _forminclude__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html");

    java.util.TreeMap FieldMap;
    synchronized (pageContext.getSession()) {
      FieldMap = (java.util.TreeMap) pageContext.getSession().getAttribute("FieldMap");
      if (FieldMap == null) {
        FieldMap = new java.util.TreeMap();
        pageContext.getSession().setAttribute("FieldMap", FieldMap);
      }
    }
    java.util.Vector ManField;
    synchronized (pageContext.getSession()) {
      ManField = (java.util.Vector) pageContext.getSession().getAttribute("ManField");
      if (ManField == null) {
        ManField = new java.util.Vector();
        pageContext.getSession().setAttribute("ManField", ManField);
      }
    }
    out.write(_jsp_string0, 0, _jsp_string0.length);
     
response.setDateHeader("Expires", 0 );
response.setHeader("Cache-Control", "no-cache, post-check=0, pre-check=0"); 
response.setHeader("Pragma", "no-cache"); 

String JNDIDSN = request.getParameter("JNDIDSN");
String TableName = request.getParameter("TableName");
String BeanName = request.getParameter("BeanName");
String FormName = request.getParameter("FormName");
String ForeignKey =  request.getParameter("ForeignKey");
String LoginFolderName =  request.getParameter("LoginFolderName");

String[] FKeys  =  null ;
if(ForeignKey!= null && ForeignKey.length()>0) FKeys =ForeignKey.split(":");
java.util.HashSet KeySet = new java.util.HashSet();
if(FKeys!=null)
{
for (int i=0; i<FKeys.length ; i++)
{
 KeySet.add(FKeys[i]);
}
}

boolean bUpdate=false;
if("Update".equalsIgnoreCase(request.getParameter("Mode"))) bUpdate=true;

Context env = (Context) new InitialContext().lookup("java:comp/env");
DataSource source = (DataSource) env.lookup(JNDIDSN);
Connection conn = source.getConnection();
String query = BeanwizHelper.openTableSQL(conn, TableName);


try 
{
java.sql.Statement stmt = conn.createStatement();
java.sql.ResultSet rslt = stmt.executeQuery(query);
java.sql.ResultSetMetaData rsmd = rslt.getMetaData();
int count  = rsmd.getColumnCount();	

    out.write(_jsp_string1, 0, _jsp_string1.length);
    
int n = 0;
int k = 1 ;
for(n = 1 ; n <= count ; n++ )
{	
   int ColType = rsmd.getColumnType(n);
	 String ColName = rsmd.getColumnName(n) ;
	 String ColVarName="";
 	 int ColSize = rsmd.getColumnDisplaySize(n) ;
 	 int Precision = rsmd.getPrecision(n);
	 int Scale = rsmd.getScale(n);

	 
   if( rsmd.isAutoIncrement(n))continue ;	
	 
	 if(bUpdate)
	 {
	 ColVarName=BeanName+"."+ColName.replace((char)32, '_' ) ;
	 }
	 
 if(FKeys!=null && KeySet.contains(ColName))
{ 
    out.write(_jsp_string2, 0, _jsp_string2.length);
    out.print((ColName ));
    out.write(_jsp_string3, 0, _jsp_string3.length);
    out.print((ColName ));
    out.write(_jsp_string4, 0, _jsp_string4.length);
    out.print((ColVarName ));
    out.write(_jsp_string5, 0, _jsp_string5.length);
     
}
else
{ 

 if( FieldMap!=null && FieldMap.size() >0  ) // If input field preferences are present in session
 { 
 
    out.write(_jsp_string6, 0, _jsp_string6.length);
    out.print((ColName ));
    out.write(_jsp_string7, 0, _jsp_string7.length);
    out.print("<"+"%=FieldLabel["+BeanName+"_"+ColName+"] %"+">" ) ;
    out.write(_jsp_string8, 0, _jsp_string8.length);
    pageContext.include(pageContext.encode(pageContext.encode(pageContext.encode(pageContext.encode("inputfield.jsp"), "ColName=" + com.caucho.el.Expr.toString( ColName , null)).append('&'), "ColVarName=" + com.caucho.el.Expr.toString(ColVarName , null)).append('&'), "UpdateForm=" + com.caucho.el.Expr.toString(bUpdate , null)).toString(), true);out.write(_jsp_string9, 0, _jsp_string9.length);
    
 
 }
 else
 { 
   //   If input field preferences are NOT present in session
 
  if( ColType ==java.sql.Types.DATE)
  {
	
    out.write(_jsp_string10, 0, _jsp_string10.length);
    out.print((ColName ));
    out.write(_jsp_string7, 0, _jsp_string7.length);
    out.print("<"+"%=FieldLabel["+BeanName+"_"+ColName+"] %"+">" ) ;
    out.write(_jsp_string11, 0, _jsp_string11.length);
    out.print((ColName ));
    out.write(_jsp_string12, 0, _jsp_string12.length);
    out.print((ColName ));
    out.write(_jsp_string13, 0, _jsp_string13.length);
    if(bUpdate)out.print(" value=\"<"+"%=DateTimeHelper.showDatePicker("+ColVarName+") %"+">\" ");
    out.write(_jsp_string14, 0, _jsp_string14.length);
    
  
 	}
  else if ( ColType ==java.sql.Types.TIMESTAMP)
  {
 
    out.write(_jsp_string15, 0, _jsp_string15.length);
    out.print((ColName ));
    out.write(_jsp_string7, 0, _jsp_string7.length);
    out.print("<"+"%=FieldLabel["+BeanName+"_"+ColName+"] %"+">" ) ;
    out.write(_jsp_string16, 0, _jsp_string16.length);
    out.print((ColName ));
    out.write(_jsp_string12, 0, _jsp_string12.length);
    out.print((ColName ));
    out.write(_jsp_string17, 0, _jsp_string17.length);
    if(bUpdate)out.print(" value=\"<"+"%=DateTimeHelper.showDateTimePicker("+ColVarName+") %"+">\" ");
    out.write(_jsp_string18, 0, _jsp_string18.length);
    out.print("<"+"%=FieldLabel["+BeanName+"_"+ColName+"] %"+">" ) ;
    out.write(_jsp_string19, 0, _jsp_string19.length);
    out.print((ColName ));
    out.write(_jsp_string12, 0, _jsp_string12.length);
    out.print((ColName ));
    out.write(_jsp_string20, 0, _jsp_string20.length);
    if(bUpdate)out.print(" value=\"<"+"%=DateTimeHelper.showDateTimePicker("+ColVarName+") %"+">\" ");
    out.write(_jsp_string21, 0, _jsp_string21.length);
    
 }
  else if ( ColType ==java.sql.Types.TIME)
  {
 
    out.write(_jsp_string15, 0, _jsp_string15.length);
    out.print((ColName ));
    out.write(_jsp_string7, 0, _jsp_string7.length);
    out.print("<"+"%=FieldLabel["+BeanName+"_"+ColName+"] %"+">" ) ;
    out.write(_jsp_string22, 0, _jsp_string22.length);
    out.print((ColName ));
    out.write(_jsp_string12, 0, _jsp_string12.length);
    out.print((ColName ));
    out.write(_jsp_string23, 0, _jsp_string23.length);
    if(bUpdate)out.print(" value=\"<"+"%=DateTimeHelper.showTimeClockPicker("+ColVarName+", \"Read\") %"+">\" ");
    out.write(_jsp_string24, 0, _jsp_string24.length);
    
 }
  else if (ColType ==java.sql.Types.VARBINARY ||ColType ==java.sql.Types.LONGVARBINARY || ColType ==java.sql.Types.BINARY || ColType ==java.sql.Types.BLOB )
  {
 
    out.write(_jsp_string25, 0, _jsp_string25.length);
    out.print((ColName ));
    out.write(_jsp_string7, 0, _jsp_string7.length);
    out.print("<"+"%=FieldLabel["+BeanName+"_"+ColName+"] %"+">" ) ;
    out.write(_jsp_string26, 0, _jsp_string26.length);
    out.print((ColName ));
    out.write(_jsp_string12, 0, _jsp_string12.length);
    out.print((ColName ));
    out.write(_jsp_string27, 0, _jsp_string27.length);
    out.print((ColName ));
    out.write(_jsp_string28, 0, _jsp_string28.length);
    
  }
  else if(ColType ==java.sql.Types.LONGVARCHAR || ColType ==java.sql.Types.CLOB )
  {
 
    out.write(_jsp_string29, 0, _jsp_string29.length);
    out.print((ColName ));
    out.write(_jsp_string7, 0, _jsp_string7.length);
    out.print("<"+"%=FieldLabel["+BeanName+"_"+ColName+"] %"+">" ) ;
    out.write(_jsp_string30, 0, _jsp_string30.length);
    out.print((ColName ));
    out.write(_jsp_string12, 0, _jsp_string12.length);
    out.print((ColName ));
    out.write(_jsp_string31, 0, _jsp_string31.length);
      if(bUpdate){ 
    out.write(_jsp_string32, 0, _jsp_string32.length);
    out.print((ColVarName ));
    out.write(_jsp_string33, 0, _jsp_string33.length);
     } 
    out.write(_jsp_string34, 0, _jsp_string34.length);
    
  }
  else
  {
 
    out.write(_jsp_string29, 0, _jsp_string29.length);
    out.print((ColName ));
    out.write(_jsp_string7, 0, _jsp_string7.length);
    out.print("<"+"%=FieldLabel["+BeanName+"_"+ColName+"] %"+">" ) ;
    out.write(_jsp_string35, 0, _jsp_string35.length);
    out.print(( ColName ));
    out.write(_jsp_string12, 0, _jsp_string12.length);
    out.print(( ColName ));
    out.write(_jsp_string36, 0, _jsp_string36.length);
    if(bUpdate){ 
    out.write(_jsp_string37, 0, _jsp_string37.length);
    out.print((ColVarName ));
    out.write(_jsp_string38, 0, _jsp_string38.length);
     } 
    out.write(_jsp_string39, 0, _jsp_string39.length);
    
  }
 } //end if (FieldMap!=null && FieldMap.size() >0 )   input field preferences are NOT present in session Values are present in session 	
	
} // end if of if(FKeys!=null && KeySet.contains(ColName))
if(n%2==0)out.println("</div>\r\n");
if(n%2==0 && k!=count)out.println("<div class=\"row\" >");

//k++; 
}// end for(int n = 1 ; n <= count ; n++ ) 
//if(k%2==0)out.print("<div class=\"form-group col-sm-6\">&nbsp;</div><div class=\"form-group col-sm-6\">&nbsp;</div>"); 

    out.write(_jsp_string40, 0, _jsp_string40.length);
    
  stmt.close();
}
finally
{
 	 conn.close();
}

    out.write(_jsp_string41, 0, _jsp_string41.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != 8324212715306645294L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("user/forms/forminclude.jsp"), -6407374235940875356L, false);
    _caucho_depends.add(depend);
    loader.addDependency(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string6;
  private final static char []_jsp_string23;
  private final static char []_jsp_string8;
  private final static char []_jsp_string3;
  private final static char []_jsp_string14;
  private final static char []_jsp_string19;
  private final static char []_jsp_string38;
  private final static char []_jsp_string35;
  private final static char []_jsp_string37;
  private final static char []_jsp_string5;
  private final static char []_jsp_string17;
  private final static char []_jsp_string28;
  private final static char []_jsp_string4;
  private final static char []_jsp_string39;
  private final static char []_jsp_string40;
  private final static char []_jsp_string33;
  private final static char []_jsp_string22;
  private final static char []_jsp_string10;
  private final static char []_jsp_string31;
  private final static char []_jsp_string16;
  private final static char []_jsp_string41;
  private final static char []_jsp_string12;
  private final static char []_jsp_string36;
  private final static char []_jsp_string29;
  private final static char []_jsp_string1;
  private final static char []_jsp_string21;
  private final static char []_jsp_string20;
  private final static char []_jsp_string11;
  private final static char []_jsp_string0;
  private final static char []_jsp_string2;
  private final static char []_jsp_string30;
  private final static char []_jsp_string15;
  private final static char []_jsp_string13;
  private final static char []_jsp_string24;
  private final static char []_jsp_string25;
  private final static char []_jsp_string27;
  private final static char []_jsp_string26;
  private final static char []_jsp_string9;
  private final static char []_jsp_string34;
  private final static char []_jsp_string18;
  private final static char []_jsp_string7;
  private final static char []_jsp_string32;
  static {
    _jsp_string6 = "\r\n  <div class=\"form-group col-sm-6\">\r\n	  <label for=\"".toCharArray();
    _jsp_string23 = "\" class=\"form-control readonlybg\"".toCharArray();
    _jsp_string8 = "</label>\r\n	  ".toCharArray();
    _jsp_string3 = ":</td>\r\n <td> <input type=\"text\" name=\"".toCharArray();
    _jsp_string14 = "data-plugin=\"datepicker\">\r\n				  <span class=\"input-group-addon\"><span class=\"icon fa fa-calendar\" aria-hidden=\"true\"></span></span>\r\n			</div>	\r\n	 </div>\r\n".toCharArray();
    _jsp_string19 = "</label>\r\n      <div class=\"input-group input-group-icon\" >\r\n        <input type='text' name=\"".toCharArray();
    _jsp_string38 = ") %>\" ".toCharArray();
    _jsp_string35 = "</label>\r\n       <input type=\"text\" name=\"".toCharArray();
    _jsp_string37 = "value=\"<%=StrValue(".toCharArray();
    _jsp_string5 = "\"   /></td>\r\n</tr> \r\n-->\r\n".toCharArray();
    _jsp_string17 = "\" class=\"form-control\"".toCharArray();
    _jsp_string28 = ".\" /><!-- accept=\".xls,.xlsx\" --> />\r\n		 </div>\r\n".toCharArray();
    _jsp_string4 = "\" value=\"".toCharArray();
    _jsp_string39 = " />\r\n	  </div>\r\n".toCharArray();
    _jsp_string40 = "</div> <!-- End div class=row -->\r\n\r\n".toCharArray();
    _jsp_string33 = " %>".toCharArray();
    _jsp_string22 = "</label>\r\n      <div class=\"input-group input-group-icon\">	\r\n        <input type=\"text\" name=\"".toCharArray();
    _jsp_string10 = "\r\n	  <div class=\"form-group col-sm-6\">\r\n	  <label for=\"".toCharArray();
    _jsp_string31 = "\" class=\"form-control\" >".toCharArray();
    _jsp_string16 = "</label>\r\n		  <input type=\"text\" name=\"".toCharArray();
    _jsp_string41 = "\r\n\r\n\r\n".toCharArray();
    _jsp_string12 = "\" id=\"".toCharArray();
    _jsp_string36 = "\" class=\"form-control\" ".toCharArray();
    _jsp_string29 = "\r\n    <div class=\"form-group col-sm-6\">\r\n	     <label for=\"".toCharArray();
    _jsp_string1 = "\r\n\r\n<div class=\"row\">".toCharArray();
    _jsp_string21 = " />\r\n          <span class=\"input-group-addon\"><span class=\"icon fa fa-clock-o\" aria-hidden=\"true\"></span></span>\r\n      </div>\r\n    </div>\r\n-->\r\n".toCharArray();
    _jsp_string20 = "\" class=\"form-control datetimepicker readonlybg\"".toCharArray();
    _jsp_string11 = "</label>\r\n		  <div class=\"input-group input-group-icon\">	\r\n			  <input type=\"text\" name=\"".toCharArray();
    _jsp_string0 = "\r\n".toCharArray();
    _jsp_string2 = "\r\n<!-- FOREIGN KEY FIELD NOT SHOWN\r\n<tr>\r\n <td>".toCharArray();
    _jsp_string30 = "</label>\r\n			 <textarea rows=\"2\" name=\"".toCharArray();
    _jsp_string15 = " \r\n    <div class=\"form-group col-sm-6\">\r\n	    <label for=\"".toCharArray();
    _jsp_string13 = "\" class=\"form-control readonlybg\" ".toCharArray();
    _jsp_string24 = "  data-plugin=\"clockpicker\" data-placement=\"bottom\">\r\n        <span class=\"input-group-addon\"><span class=\"icon fa fa-clock-o\" aria-hidden=\"true\"></span></span>\r\n      </div>\r\n    </div>	\r\n".toCharArray();
    _jsp_string25 = "\r\n     <div class=\"form-group col-sm-6\">\r\n	     <label for=\"".toCharArray();
    _jsp_string27 = "\"  enctype=\"multipart/form-data\" class=\"form-control filestyle\" data-buttonName=\"btn-primary\" data-iconName=\"icon fa fa-inbox\" data-placeholder=\"None Selected\" title=\"Please select the ".toCharArray();
    _jsp_string26 = "</label>\r\n       <input type=\"file\" name=\"".toCharArray();
    _jsp_string9 = "\r\n	</div>\r\n ".toCharArray();
    _jsp_string34 = "</textarea>\r\n	  </div>\r\n".toCharArray();
    _jsp_string18 = " />\r\n		</div>\r\n<!--  \r\n    <div class=\"form-group col-sm-6\">\r\n    <label for=\"FirstName\" class=\"control-label blue-grey-600\">".toCharArray();
    _jsp_string7 = "\" class=\"control-label blue-grey-600\" >".toCharArray();
    _jsp_string32 = "<%=".toCharArray();
  }
}
