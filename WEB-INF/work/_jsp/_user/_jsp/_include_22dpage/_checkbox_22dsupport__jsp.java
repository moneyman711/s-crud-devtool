/*
 * JSP generated by Resin-4.0.47 (built Thu, 03 Dec 2015 10:34:34 PST)
 */

package _jsp._user._jsp._include_22dpage;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;

public class _checkbox_22dsupport__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html");

     
response.setDateHeader("Expires", 0 );
response.setHeader("Cache-Control", "no-cache, post-check=0, pre-check=0"); 
response.setHeader("Pragma", "no-cache"); 
String TableName = request.getParameter("TableName")  ;
String IDField  = request.getParameter("IDField")  ;
String bDatatablesJSCSS = request.getParameter("DatatablesJSCSS") ;

    out.write(_jsp_string0, 0, _jsp_string0.length);
    out.print((TableName));
    out.write(_jsp_string1, 0, _jsp_string1.length);
    out.print((TableName));
    out.write(_jsp_string2, 0, _jsp_string2.length);
    out.print((TableName));
    out.write(_jsp_string3, 0, _jsp_string3.length);
     if(bDatatablesJSCSS.equalsIgnoreCase("true")){
    out.write(_jsp_string4, 0, _jsp_string4.length);
     } 
    out.write(_jsp_string5, 0, _jsp_string5.length);
    out.print((TableName));
    out.write(_jsp_string6, 0, _jsp_string6.length);
     if(bDatatablesJSCSS.equalsIgnoreCase("true")){
    out.write(_jsp_string7, 0, _jsp_string7.length);
     } 
    out.write(_jsp_string8, 0, _jsp_string8.length);
    out.print((IDField  ));
    out.write(_jsp_string9, 0, _jsp_string9.length);
    out.print((TableName ));
    out.write(_jsp_string10, 0, _jsp_string10.length);
    out.print((IDField  ));
    out.write(_jsp_string11, 0, _jsp_string11.length);
    out.print((TableName ));
    out.write(_jsp_string12, 0, _jsp_string12.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != 8324212715306645294L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("user/jsp/include-page/checkbox-support.jsp"), 8738530522724599097L, false);
    _caucho_depends.add(depend);
    loader.addDependency(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string8;
  private final static char []_jsp_string2;
  private final static char []_jsp_string5;
  private final static char []_jsp_string11;
  private final static char []_jsp_string0;
  private final static char []_jsp_string10;
  private final static char []_jsp_string9;
  private final static char []_jsp_string4;
  private final static char []_jsp_string7;
  private final static char []_jsp_string1;
  private final static char []_jsp_string12;
  private final static char []_jsp_string6;
  private final static char []_jsp_string3;
  static {
    _jsp_string8 = "\r\n      });\r\n   }\r\n});\r\n \r\nfunction DeleteAllChecked()\r\n{\r\n     var sel_items = $(\"input[name='".toCharArray();
    _jsp_string2 = "_Result_checkall\").is(':checked')) {\r\n        $(\"#".toCharArray();
    _jsp_string5 = "\r\n      });\r\n   } else {\r\n        $(\"#".toCharArray();
    _jsp_string11 = "']\").fieldArray();\r\n	   var sel_count_actv = ( sel_items_actv !=null ) ?  sel_items_actv.length: 0 ;\r\n		 var msg = \"Activity for ( \"+sel_count_actv+\" ) checked items ?\" ;\r\n		 \r\n		 if(sel_count_actv==0)\r\n		 {\r\n		   swal({title: '',text: 'You must check at least one item for checked activity !',type: 'info',confirmButtonText:'OK'})\r\n			 return false ;\r\n		 }\r\n		 else\r\n		 {\r\n        swal({\r\n          title: 'Please confirm !',\r\n          text:  msg,\r\n          type: 'question',\r\n          showCancelButton: true\r\n        	,animation: false\r\n        }).then(function() {\r\n  		      $(\"#CheckedAction\").val(\"Activity\");\r\n            $('#".toCharArray();
    _jsp_string0 = "\r\n// Support for check boxes in data list.\r\n\r\n$(\"#".toCharArray();
    _jsp_string10 = "_list' ).submit();\r\n        }, function(dismiss) {\r\n          // dismiss can be 'cancel', 'overlay', 'close', 'timer'\r\n          if (dismiss === 'cancel') {\r\n            //toastr.info(\"Delete Cancel !\");\r\n          }\r\n        })\r\n			}\r\n		 return false;	 \r\n} \r\n\r\nfunction CheckedActivity()\r\n{\r\n     var sel_items_actv = $(\"input[name='".toCharArray();
    _jsp_string9 = "']\").fieldArray();\r\n	   var sel_count = ( sel_items !=null ) ?  sel_items.length: 0 ;\r\n		 var msg = \"Really want to Delete ( \"+sel_count+\" ) checked items ?\" ;\r\n		\r\n		 if(sel_count==0)\r\n		 {\r\n		   swal({title: '',text: 'You must check at least one item for Deletion !',type: 'info',confirmButtonText:'OK'})\r\n			 return false ;\r\n		 }\r\n		 else\r\n		 {\r\n        swal({\r\n          title: 'Are you sure?',\r\n          text:  msg,\r\n          type: 'question',\r\n          showCancelButton: true\r\n        	,animation: false\r\n        }).then(function() {\r\n  		      $(\"#CheckedAction\").val(\"Delete\");\r\n            $('#".toCharArray();
    _jsp_string4 = "\r\n					$('table.wdatatable').DataTable().rows().select();//for TR select".toCharArray();
    _jsp_string7 = "\r\n					$('table.wdatatable').DataTable().rows().deselect();//for TR Deselect".toCharArray();
    _jsp_string1 = "_Result_checkall\").click(function () {\r\n   if ($(\"#".toCharArray();
    _jsp_string12 = "_list' ).submit();\r\n        }, function(dismiss) {\r\n          // dismiss can be 'cancel', 'overlay', 'close', 'timer'\r\n          if (dismiss === 'cancel') {\r\n            //toastr.info(\"Delete Cancel !\");\r\n          }\r\n        })\r\n			}\r\n		 return false;	 \r\n} \r\n".toCharArray();
    _jsp_string6 = "_Result_tbl input[type=checkbox]\").each(function () {\r\n          $(this).prop(\"checked\", false);".toCharArray();
    _jsp_string3 = "_Result_tbl input[type=checkbox]\").each(function () {\r\n          $(this).prop(\"checked\", true);".toCharArray();
  }
}
